{"version":3,"sources":["components/globe.tsx","components/DiscreteSlider.tsx","components/Toggle.tsx","components/DataDialog.tsx","components/ControlsBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useEffect","React","useRef","World","props","data","globeEl","mode","year","data2005","data2010","data2016","data2017","data2018","objData","map","d","lat","lng","temp","console","log","current","controls","autoRotate","autoRotateSpeed","weightColor","d3","domain","ref","globeImageUrl","bumpImageUrl","backgroundImageUrl","hexBinPointsData","hexBinPointWeight","hexAltitude","sumWeight","hexBinResolution","hexTopColor","hexSideColor","hexBinMerge","enablePointerInteraction","useStyles","makeStyles","root","marginTop","height","mark","color","valuetext","value","years","label","DiscreteSlider","setYear","classes","className","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","orientation","onChange","event","markLabel","createStyles","width","padding","margin","switchBase","transform","backgroundColor","opacity","border","thumb","track","borderRadius","backgroundColour","transition","checked","focusVisible","Toggle","setMode","classObj","Switch","icon","fontSize","checkedIcon","PaperComponent","handle","cancel","Paper","Transition","forwardRef","Slide","direction","DataDialog","useState","open","setOpen","handleClose","style","Button","variant","onClick","buttonLabel","Dialog","onClose","maxWidth","TransitionComponent","DialogTitle","cursor","id","dialogTitle","DialogContent","LineChart","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","CartesianGrid","stroke","Line","type","yAxisId","dot","DialogContentText","dialogText","DialogActions","autoFocus","initialDialogData","ControlsBox","methane","setMethane","co2","setCo2","nitrous","setNitrous","setTemp","dialogData","setDialogData","Promise","all","axios","get","then","result","x","val","station","name","Number","time","split","cycle","average","date","dialogs","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da38a6fb.chunk.js","sourcesContent":["import React from \"react\";\nimport Globe from \"react-globe.gl\";\nimport * as d3 from \"d3\";\nimport data2005 from \"../data/json-data2005.json\";\nimport data2010 from \"../data/json-data2010.json\";\nimport data2016 from \"../data/json-data2016.json\";\nimport data2017 from \"../data/json-data2017.json\";\nimport data2018 from \"../data/json-data2018.json\";\n\n\nconst { useEffect, useRef } = React;\n\ninterface Props {\n  mode: boolean;\n  year: number;\n}\n\nconst World = (props: Props) => {\n  const globeEl = useRef<any>(null);\n  const { mode,year } = props;\n\n  let data: (string | number | null)[][];\n  switch (year) {\n    case 2005:\n      data = data2005;\n      break;\n    case 2010:\n      data = data2010;\n      break;\n    case 2016:\n      data = data2016;\n      break;\n    case 2017:\n      data = data2017\n      break;\n    default:\n      data = data2018;\n      break;\n  }\n  \n  const objData = data.map((d) => ({\n    lat: d[1],\n    lng: d[2],\n    temp: d[4],\n  }));\n  console.log(objData);\n\n  useEffect(() => {\n    // setPopData(data);\n    // console.log(\"popData:\", popData);\n    //   // load data\n    //   // fetch('./data/json-data1.json').then(res => res.text())\n    //     d3.json(data, ({ lat, lng, pop }) => ({ lat: +lat, lng: +lng, pop: +pop })))\n    //     .then(setPopData);\n  }, []);\n\n  useEffect(() => {\n    // Auto-rotate\n    if (null !== globeEl.current) {\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 1;\n    }\n  }, []);\n\n  const weightColor = d3\n    .scaleSequentialSqrt(d3.interpolateRdYlBu)\n    .domain([90, 50]);\n\n  return (\n    <Globe\n      ref={globeEl}\n      globeImageUrl={\n        mode\n          ? \"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n          : \"//unpkg.com/three-globe/example/img/earth-day.jpg\"\n      }\n      bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n      backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n      hexBinPointsData={objData}\n      hexBinPointWeight=\"temp\"\n      hexAltitude={(d) => d.sumWeight * 0.002}\n      hexBinResolution={4}\n      hexTopColor={(d) => weightColor(d.sumWeight)}\n      hexSideColor={(d) => weightColor(d.sumWeight)}\n      hexBinMerge={true}\n      enablePointerInteraction={false}\n    />\n  );\n};\n\nexport default World;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: '2rem',\n    height: '300px'\n  },\n  mark: {\n    color: 'white'\n  }\n});\n\nfunction valuetext(value : any) {\n  return `${value}`;\n}\n\nconst years = [\n  { value: 2005, label: 2005 },\n  { value: 2010, label: 2010 },\n  { value: 2016, label: 2016 },\n  { value: 2017, label: 2017 },\n  { value: 2018, label: 2018 },\n];\n\ninterface Props {\n  setYear: React.Dispatch<React.SetStateAction<number>>;\n  year: number;\n  \n}\n\nexport default function DiscreteSlider(props: Props) {\n  const { setYear, year } = props;\n  const classes = useStyles();\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof value === 'number') {\n      setYear(value);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        defaultValue={30}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"on\"\n        step={null}\n        marks={years}\n        min={2005}\n        max={2018}\n        orientation='vertical'\n        value={year}\n        onChange={handleChange}\n        classes={{ markLabel: classes.mark }}\n      />\n    </div>\n  );\n}","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\"; // moon\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\"; // sun\nimport { withStyles, makeStyles, createStyles } from \"@material-ui/core/styles\";\n// import { Brightness3Icon, BrightnessHighIcon } from \"@material-ui/icons/\";\n\ninterface Props {\n  setMode: React.Dispatch<React.SetStateAction<boolean>>;\n  mode: boolean;\n  \n}\n\n\n\nconst useStyles = makeStyles(() => createStyles({\n  root: {\n    width: 60,\n    height: 60,\n    padding: 0,\n    margin: 5\n    // margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(0)\",\n      color: 'yellow',\n      // color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#000\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#EEEEEE\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: '1px solid black',\n    // border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColour: 'yellow',\n    // backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: 'background-color'\n    // transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}));\n\nconst Toggle = (props: Props) => {\n  const classes = useStyles();\n  const { setMode, mode } = props;\n\n  const classObj = {\n    root: classes.root,\n    switchBase: classes.switchBase,\n    thumb: classes.thumb,\n    track: classes.track,\n    checked: classes.checked,\n  }\n  return (\n    <Switch\n      icon={<Brightness3Icon fontSize=\"large\" />}\n      checkedIcon={<BrightnessHighIcon fontSize='large' />}\n      onChange={() => setMode(!mode)}\n      color=\"secondary\"\n      classes={classObj}\n    />\n  );\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper, { PaperProps } from \"@material-ui/core/Paper\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport Draggable from \"react-draggable\";\nimport {\n  LineChart,\n  Tooltip,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n} from \"recharts\";\n\ninterface Props {\n  buttonLabel: string;\n  dialogTitle: string;\n  dialogText: string;\n  data: any[];\n}\n\nfunction PaperComponent(props: PaperProps) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DataDialog(props: Props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div style={{ marginTop: \"2rem\" }}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.buttonLabel}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n        maxWidth=\"lg\"\n        TransitionComponent={Transition}\n      >\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n          {props.dialogTitle}\n        </DialogTitle>\n        <DialogContent>\n          {/* Chart goes here? */}\n          <LineChart\n            width={1000}\n            height={600}\n            data={props.data}\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n          >\n            <XAxis dataKey=\"name\" />\n            <YAxis dataKey=\"val\" domain={['dataMin-1.5', 'dataMax']}/>\n            <Tooltip />\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <Line type=\"monotone\" dataKey=\"val\" stroke=\"#ff7300\" yAxisId={0} dot={false} />\n          </LineChart>\n          <DialogContentText>{props.dialogText}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState} from \"react\";\nimport DiscreteSlider from \"./DiscreteSlider\";\nimport Toggle from './Toggle'\nimport DataDialog from \"./DataDialog\";\nimport './ControlsBox.scss';\nimport axios from 'axios';\n\ninterface Props {\n  setMode: React.Dispatch<React.SetStateAction<boolean>>;\n  setYear: React.Dispatch<React.SetStateAction<number>>;\n  year: number;\n  mode: boolean;\n}\n\nconst initialDialogData = [\n  {\n    buttonLabel: \"Carbon Dioxide Chart\",\n    dialogTitle: \"Global Average Carbon Dioxide Levels\",\n    dialogText: `Carbon dioxide, is an organic compound consisting of one carbon atom and two oxygen atoms - CO2\n         Carbon dioxide is a natural occuring substance and is consumed by plants through photosynthesis.  It is also created through combustion of\n         organic matter with oxygen.`,\n    data: [],\n  },\n  {\n    buttonLabel: \"Nitrous Oxide Chart\",\n    dialogTitle: \"Global Average Nitrous Oxide Levels\",\n    dialogText: `Nitrous Oxide, also known as nos, is a result of combustion and consists of two nitrogen atoms and one oxygen atom - N2O.\n         Nitrous oxide is a green house gas as well as \"the biggest ozone-destroying compound emitted by humans\" (*2).`,\n    data: [],\n  },\n  {\n    buttonLabel: \"Temperature Chart\",\n    dialogTitle: \"Global Average Temperature Anomolies\",\n    dialogText: `Temperature, also known as heat, consisting of hot stuff, I R PROGRAMMER.`,\n    data: [],\n  },\n  {\n    buttonLabel: \"Methane Chart\",\n    dialogTitle: \"Global Average Methane Levels\",\n    dialogText: `Methane, also known as Natural Gas, is an organic compound consisting of one carbon atom and four hydrogen atoms - CH4\n         The greenhouse effect of methane is several times stronger than that of carbon dioxide (*1).  Sources of methane are both\n         natural and human-made.`,\n    data: [],\n  },\n];\n\n\nconst ControlsBox = (props: Props) => {\n\n  const { setMode, mode, setYear, year } = props;\n  const [methane, setMethane] = useState([]);\n  const [co2, setCo2] = useState([]);\n  const [nitrous, setNitrous] = useState([]);\n  const [temp, setTemp] = useState([]);\n  const [dialogData, setDialogData] = useState(initialDialogData)\n\n  useEffect(() => {\n    Promise.all([\n    axios.get('https://global-warming.org/api/temperature-api'),\n    axios.get('https://global-warming.org/api/co2-api'),\n    axios.get('https://global-warming.org/api/methane-api'),\n    axios.get('https://global-warming.org/api/nitrous-oxide-api')])\n    .then((all)=>{\n      console.log(all)\n      setTemp(all[0].data.result.map((x: any) => ({ val: x.station, name: Number(x.time.split('.')[0]) })));\n      // setCo2(all[1].data.co2.map((x: any) => ({ val: x.cycle, name: new Date(`${x.year}-${x.month}-${x.day}`)})));\n      // setCo2(all[1].data.co2.map((x: any) => ({ val: x.cycle, name: Math.round((Number(x.year) + Number(x.month) / 12 + Number(x.day) / (12 * 31)) * 100) / 100 })));\n      setCo2(all[1].data.co2.map((x: any) => ({ val: x.cycle, name: Number(x.year) })));\n      setMethane(all[2].data.methane.map((x: any) => ({ val: x.average, name: Number(x.date.split('.')[0]) })));\n      setNitrous(all[3].data.nitrous.map((x: any) => ({ val: x.average, name: Number(x.date.split('.')[0]) })));\n    });\n  }, []);\n\nuseEffect(()=>{\n  setDialogData([\n    {\n      buttonLabel: \"Carbon Dioxide Chart\",\n      dialogTitle: \"Global Average Carbon Dioxide Levels\",\n      dialogText: `Carbon dioxide, is an organic compound consisting of one carbon atom and two oxygen atoms - CO2\n         Carbon dioxide is a natural occuring substance and is consumed by plants through photosynthesis.  It is also created through combustion of\n         organic matter with oxygen.`,\n      data: co2\n    },\n    {\n      buttonLabel: \"Nitrous Oxide Chart\",\n      dialogTitle: \"Global Average Nitrous Oxide Levels\",\n      dialogText: `Nitrous Oxide, also known as nos, is a result of combustion and consists of two nitrogen atoms and one oxygen atom - N2O.\n         Nitrous oxide is a green house gas as well as \"the biggest ozone-destroying compound emitted by humans\" (*2).`,\n      data: nitrous,\n    },\n    {\n      buttonLabel: \"Temperature Chart\",\n      dialogTitle: \"Global Temperature Anomolies Levels\",\n      dialogText: `Temperature, also known as heat, consisting of hot stuff, I R PROGRAMMER.`,\n      data: temp,\n    },\n    {\n      buttonLabel: \"Methane Chart\",\n      dialogTitle: \"Global Average Methane Levels\",\n      dialogText: `Methane, also known as Natural Gas, is an organic compound consisting of one carbon atom and four hydrogen atoms - CH4\n         The greenhouse effect of methane is several times stronger than that of carbon dioxide (*1).  Sources of methane are both\n         natural and human-made.`,\n      data: methane,\n    },\n  ])\n},[temp, co2, methane, nitrous]);\n\n  \n\n  const dialogs = dialogData.map(d => <DataDialog {...d} key={d.dialogTitle} />)\n\n  return (\n  <div className=\"control-box\">\n    <Toggle setMode={setMode} mode={mode}/>\n    <DiscreteSlider year={year} setYear={setYear} />\n    {dialogs}\n  </div>\n  );\n};\n\nexport default ControlsBox;\n","import React, { useState } from \"react\";\nimport World from \"./components/globe\";\nimport ControlsBox from \"./components/ControlsBox\";\n\nfunction App() {\n  const [mode, setMode] = useState(true);\n  const [year, setYear] = useState(2018);\n  return (\n    <div className=\"App\">\n      <ControlsBox setYear={setYear} year={year} mode={mode} setMode={setMode} />\n      <World year={year} mode={mode} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}